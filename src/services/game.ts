import { DB_Room } from "../types/Room.type";

export interface CreateGameReturn {
  type: "create_game";
  data: {
    idGame: number | string;
    idPlayer: number | string;
  };
  clientIds: string[];
}

export function createGame(userId: string, room: DB_Room): CreateGameReturn {
  return {
    type: "create_game",
    data: { idGame: crypto.randomUUID(), idPlayer: userId },
    clientIds: room.roomUsers.map(({ index }) => index),
  };
}

// {
//   type: "create_game", //send for both players in the room, after they are connected to the room
//   data:
//       {
//           idGame: <number | string>,
//           idPlayer: <number | string>, /* generated by server id for player in the game session, not enemy (unique id for every player) */
//       },
//   id: 0,
// }
